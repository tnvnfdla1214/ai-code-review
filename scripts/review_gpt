import os
import json
import requests
from openai import OpenAI

# 환경 변수에서 API 키 및 설정값 가져오기
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
GITHUB_TOKEN = os.getenv("GITHUB_TOKEN")
REPO = os.getenv("GITHUB_REPOSITORY")
PR_NUMBER = os.getenv("GITHUB_EVENT_NUMBER")

# OpenAI GPT API 설정
client = OpenAI(api_key=OPENAI_API_KEY)

# GitHub에서 PR의 변경된 코드 가져오기
def get_pr_files():
    url = f"https://api.github.com/repos/{REPO}/pulls/{PR_NUMBER}/files"
    headers = {"Authorization": f"token {GITHUB_TOKEN}"}

    print(f"🔍 Fetching PR files from: {url}")
    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        return response.json()
    else:
        print(f"❌ Error fetching PR files: {response.json()}")
        return []

# OpenAI GPT API를 사용해 코드 리뷰 생성
def request_code_review(code):
    try:
        response = client.completions.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "당신은 코드 리뷰어입니다. 주어진 코드에 대한 피드백을 제공하세요."},
                {"role": "user", "content": code}
            ]
        )
        return response["choices"][0]["message"]["content"].strip()
    except Exception as e:
        print(f"❌ Error calling OpenAI API: {e}")
        return "코드 리뷰를 받을 수 없습니다."

# GitHub PR에 리뷰 댓글 추가
def comment_on_pr(comment):
    url = f"https://api.github.com/repos/{REPO}/issues/{PR_NUMBER}/comments"
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Accept": "application/vnd.github.v3+json"
    }
    payload = {"body": comment}

    response = requests.post(url, headers=headers, json=payload)
    if response.status_code == 201:
        print("✅ Successfully commented on PR.")
    else:
        print(f"❌ Error commenting on PR: {response.status_code} - {response.json()}")

# 실행 로직
if __name__ == "__main__":
    pr_files = get_pr_files()
    for file in pr_files:
        filename = file["filename"]
        patch = file.get("patch", "")
        if patch:
            review_comment = request_code_review(f"File: {filename}\n\n{patch}")
            comment_on_pr(f"### Code Review for `{filename}`\n\n{review_comment}")
